1. postorder(node_num) 함수
이 함수는 후위 순회를 통해 이진 트리에서 연산을 수행합니다.

입력: node_num은 현재 노드의 번호입니다.
출력: 해당 노드를 루트로 하는 서브트리의 계산 결과를 반환합니다.
동작 원리:

먼저 현재 노드가 리프 노드(자식이 없는 노드)인 경우, 즉 tree[node_num]이 비어 있다면, 그 노드의 값을 그대로 반환합니다.
이는 피연산자가 있는 리프 노드일 때 해당 피연산자 값을 반환하는 것입니다.
그렇지 않다면, 왼쪽 자식 노드(left)와 오른쪽 자식 노드(right)의 값을 재귀적으로 계산한 후, 현재 노드의 연산자에 따라 이들 값을 연산하여 반환합니다.
2. 메인 루프 (for tc in range(1, 11):)
이 부분은 총 10개의 테스트 케이스를 처리합니다.

N = int(input()): 트리의 노드 수를 입력받습니다.


par_node = [''] * (N + 1): 각 노드의 부모 노드(엄마 노드) 정보를 저장하는 리스트입니다. N + 1 크기를 가지며,
인덱스 1부터 노드 정보를 저장합니다.

tree = [[] for _ in range(N + 1)]: 트리 구조를 저장하는 리스트입니다. 각 노드는 최대 두 개의 자식 노드를 가질 수 있습니다.

입력 처리:

주어진 트리 구조 및 연산 정보를 입력받아 처리합니다. 각 줄에서 노드 번호(node_num), 해당 노드의 연산자 또는 값(par_node[node_num]),
그리고 자식 노드들을 저장합니다.

계산 및 출력:

후위 순회를 통해 루트 노드부터 계산을 시작하여 최종 결과를 answer에 저장하고, 각 테스트 케이스의 결과를 출력합니다.