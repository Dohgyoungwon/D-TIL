Authentication System 02

<회원 가입 및 탈퇴 및 회원 정보 수정>
회원가입 : User 객체를 Create 하는 과정 

UserCreationForm() : 회원 가입시 사용자 입력 데이터를 받는 bulit-in ModelForm임 데이터베이스에 저장해야 하므로 ModelForm임

회원 가입 로직 에러

커스텀 유저 모델을 사용하려면 다시 작성해야 하는 Form은 UserCreationForm, UserChangeForm이 있음 두 Form 모두 class Meta: model = User가 작성된 Form이기 때문에 재작성이 필요함
UserCreationForm과 UserChangeForm 커스텀
Custom User model을 사용할 수 있또록 상속 후 일부분만 재작성함
get_user_model() : 현재 프로젝트에서 활성화된 사용자 모델(active user model)을 반환하는 함수임
User 모델을 직접 참조하지 않는 이유
get_user_model()을 사용해 User 모델을 참조하면 커스텀 User 모델을 자동으로 반환해주기 때문이고, 장고는 필수적으로 User 클래스를 직접 참조하는 대신 get_user_model()을 사용해 참조해야 한다 강조함 
회원 탈퇴
User 객체를 Delete 하는 과정(로그아웃이랑 비슷 로그아웃은 세션을 삭제하는 것)
회원정보 수정 : User 객체를 Update하는 과정임 
회원정보 수정은 User에 대한 변경 비밀번호 변경은 세션에 대한 변경  
UserChangeForm() : 회원정보 수정 시 사용자 입력 데이터를 받는 bulit-in Form 
UserChangeForm 사용 시 문제점은 User 모델의 모든 정보들(fields)까지 모두 출련되고 일반 사용자들이 접근해서는 안되는 정보는 출력하지 않도록 해야 함 따라서 CustomUserChangeForm에서 출력 필드를 다시 조정해야함 

<비밀번호 변경>
비밀번호 변경
: 인증된 사용자의 Session 데이터를 Update 하는 과정 
PasswordChangeForm() : 비밀번호 변경 시 사용자 입력 데이터를 받는 built-in Form 사용자가 입력하는 기존 비밀번호와 새로운 비밀번호가 DB에 들어가는게 아니라 인증의 수단으로 활용하고 실제 데이터가 들어가는건 세션 데이터기 때문에 Form으로 내장되어있음 
비밀번호 변경 페이지 작성 
장고는 비밀번호 변경 페이지를 회원정보 수정 form 하단에서 별도 주소로 안내함(/user_pk/password/) -> 이 주소를 쓰려면 주소 구조 때문에 app의 urls.py 보다 프로젝트 urls.py에서 작성해야 함 
세션 무효화 방지
암호 변경 시 세션 무효화는 비밀번호가 변경되면 기존 세션과의 회원 인증 정보가 일치하지 않게 되어 버려 로그인 상태가 유지되지 못하고 로그아웃 처리됨 비밀번호가 변경되면서 기존 세션과의 회원 인증 정보가 일치 하지 않기때문 
update_session_auth_hash(request, user) : 암호 변경 시 세션 무효화를 막아주는 함수 즉, 암호가 변경되면 새로운 password의 session Data로 기존 session을 자동으로 갱신함

<인증된 사용자에 대한 접근 제한>
로그인 사용자에 대해 접근을 제한하는 2가지 방법
첫번째는 is_authenticated 속성이고 두번째는 login_required 데코레이터임 (@데코레이터, 기존의 함수의 구조는 유지하며 기능적으로 꾸며주는 역할을 함)
is_authenticated은사용자가 인증 되었는지 여부를 알 수 있는 User model의 속성이고 모든 User 인스턴스에 대해 항상 True인 읽기 전용 속성임 비인증 사용자에 대해서는 항상 False임 
is_authenticated 적용하기
로그인과 비로그인 상태에서 화면에 출력되는 링크를 다르게 설정하기(if, else 사용), 인증된 사용자라면 로그인/회원가입 로직을 수행할 수 없도록 해야 함
login_required 데코레이터
인증된 사용자에 대해서면 view 함수를 실행시키는 데코레이터임 비인증 사용자의 경우 /accounts/login/ 주소로 redirect 시킴 
login_required 적용하기 
인증된 사용자만 게시글을 작성/수정/삭제 할 수 있도록 수정함 인증된 또한 인증된 사용자만 로그아웃/탈퇴/수정/비밀번호 변경 할 수 있또록 수정함 

<참고>
회원가입 후 로그인까지 이어서 진행하려면 회원가입 성공한 user 객체를 활용해 login 진행함 
회원 탈퇴 개선
탈퇴와 함께 기존 사용자의 Session Data 삭제 방법은 사용자 객체 삭제 이후 로그아웃 함수 호출함 단, 탈퇴 후 로그아웃의 순서가 바뀌면 안됨 먼저 로그아웃이 진행되면 해당 요청 객체 정보가 없어지기 때문에 탈퇴에 필요한 유저 정보 또한 없어짐
PasswordChangeForm 인자 순서
PasswordChangeForm이 다른 Form과 달리 user 객체를 첫번째 인자로 받는 이유임 부모 클래스인 SetPasswordForm의 생성자 함수 구성을 따르기 때문임 

