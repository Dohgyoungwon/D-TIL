Django 06 Form
<Django Form>
HTML 'form'
사용자로부터 데이터를 제출 받기 위해 활용하는 방법 단, 비정상적 혹은 악의적인 요청을 필터링 할 수 없음 따라서 유효한 데이터인지에 대한 확인이 필요함 
유효성 평가
: 수집한 데이터가 정확하고 유효한지 확인하는 과정
Django Form 
: 사용자 입력 데이터를 수집하고, 처리 및 유효성 검사를 수행하기 위한 도구이고, 유효성 검사를 단순화하고 자동화 할 수 있는 기능을 제공함 
Form class 정의함
Form class를 적용한 new 로직은 view 함수 new 변경하고 new 페이지에서 form 인스턴스를 출력함
Form rendering options
label, input 쌍을 특정 HTML 태그로 감싸는 옵션임 
Widgets
: HTML 'input' element의 표현을 담당함
Widget은 단순히 input요소의 속성 및 출력되는 부분을 변경하는 것임 

<Django ModelForm>
Form은 사용자 입력 데이터를 DB에 저장하지 않을 때 사용(ex. 검색, 로그인)하고, ModelForm은 사용자 입력 데이터를 DB에 저장해야 할 때(ex. 게시글 작성, 회원가입)
ModelForm 
: Model과 연결된 Form을 자동으로 생성해주는 기능을 제공함(Form + Model) 
ModelForm class 정의
기존 ArticleForm클래스 수정함 
Meta class
: ModelForm의 정보를 작성하는 곳임 
'fields' 및 'exclude' 속성은 exclude 속성을 사용하여 모델에서 포함하지 않을 필드를 지정할 수도 있음 
Meta class 주의사항은 장고에서 ModelForm에 대한 추가 정보나 속성을 작성하는 클래스 구조를 Meta 클래스로 작성 했을 뿐이며, 파이썬의 inner class와 같은 문법적인 관점으로 접근하면 안됨 
is_valid()
: 여러 유효성 검사를 실행하고, 데이터가 유효한지 여부를 Boolean으로 반환함
공백 데이터가 유효하지 않은 이유는 별도로 명시하지 않았지만 모델 필드에는 기본적으로 빈 값은 허용하지 않는 제약조건이 설정 되어있기 때문임 에러메시지가 출력되는 과정은 빈 값은 is_valid()에 의해 False로 평가되고 form 객체에는 그에 맞는 에러 메시지가 포함되어 다음 코드로 진행됨 
save() 
: 데이터베이스 객체를 만들고 저장하는 ModelForm의 인스턴스 메서드임
save() 메서드가 생성과 수정을 구분하는 법은 키워드 인자 instance 여부를 통해 생성할 지, 수정할 지를 결정함
Django Form 정리하면 사용자로부터 데이터를 수집하고 처리하기 위한 강력하고 유연한 도구이며, HTML form의 생성, 데이터 유효성 검사 및 처리를 쉽게 할 수 있도록 도와줌 

<HTTP 요청 다루기>
View 함수 구조 변화
new & create view 함수간 공통점은 "데이터 생성을 구현하기 위함"이고 차이점은 "new는 GET method 요청만을, create는 POST method 요청만을 처리함"
HTTP request method 차이점을 활용해 동일한 목적을 가지느 2개의 view 함수를 하나로 구조화 시킬 수 있음
request method에 따른 요청의 변화
(GET) 게시글 생성 페이지를 줘 ! 
(POST) 게시글을 생성해줘 ! 

<참고>
ModelForm 키워드 인자 data와 instance 살펴보기
data는 첫번째에 위치한 키워드 인자이기 떄문에 생략가능함 instance는 9번째에 위치한 키워드 인자이기 때문에 생략할 수 없음
