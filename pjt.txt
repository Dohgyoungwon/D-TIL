개발 환경 : DRF & Vue

필수 요구사항
1. 영화 데이터 
 - 영화 정보 데이터는 최소 50개 이상 존재 
 - fixtures를 사용하여 어떤 환경에서도 load 될 수 있는 초기 데이터가 있어야 함 
2. 영화 추처 알고리즘
 - 사용자는 반드시 최소 1개 이상의 영화를 추천 받을 수 있어야
 - 추천 방식 자유롭게
 - 어떠한 방식으로 추천 시스템을 구현했는지 기술적 설명 가능해야 함
3. API 
 - API 사용 제한 없음(TMDB, Youtube API)
4. 커뮤니티
 - 유저간 소통 할 수 있는 커뮤니티 기능 구현
 - 반드시, 게시판 형식아니어도 됨, 소통이라는 관점 안에서 다양한 아이디어로 자유롭게 구현 가능
5. README
 1. 팀원 정보 및 업무 분담 내역
 2. 목표 서비스 구현 및 실제 구현 정도
 3. 데이터베이스 모델링 (ERD)
 4. 영화 추천 알고리즘에 대한 기술적 설명
 5. 핵심 기능에 대한 설명
 6. 생성형 AI를 활용한 부분
 7. 기타 (느낀점, 후기 등)
 8. 배포 서버 URL (배포했을 경우)
 9. 이 외의 내용 자유롭게 
6. 기타
 - 최소한 5개 이상의 URL 및 페이지 구성
 - DRF 사용자 요청에 따라 적절한 HTTP response status code를 응답해야 함
 - .gititnore 파일ㅇㄹ 추가하여 불필요한 파일 제한
 - 추가적 기능, 디자인은 자유롭게 
7. 선택 요구사항 
 - 배포
  - 서퍼(Django) 배포
  - 클라이언트(Vue) 배포
8. 생성형 AI 활용 
 다방면에서 활용하기


<24. 11. 21>

1. 상세페이지
 - HomeView와 PopularView에서 포스터 클릭 시 상세페이지로 넘어가야함
 - 상세페이지에 제목, 줄거리, 평점 넣기 
2. 상세페이지에서 댓글, 댓글리스트, 좋아요 기능 추가
3. 메인페이지- 캐로셀
4. 인기영화 페이지 -> 지금의 날씨 css 와 동일하게 하면댐 -> 한 페이지에 32개 하고 페이지 넘기기, 총 320개 
5. 검색기능

+) 애니메이션 css 인기랑 날씨랑 동일하게
+) 메인페이지- 성인 추가

+) 추가기능: TOP의 경우는 api 실시간으로 불러와서 당일 박스오피스 TOP 10 불러오게
+) ?